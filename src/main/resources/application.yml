# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

spring.profiles:
  active: development # If spring.profile.active is not specified, profile will be "development"

security:
  basic.enabled: false

spring.http.multipart:
  max-file-size: 200MB
  max-request-size: 200MB

spring.datasource:
  url: jdbc:mysql://localhost:3306/test
  username: root
  password: root
  tomcat:
    testWhileIdle: true # Keep the connection alive if idle for a long time (needed in production)
    validationQuery: SELECT 1

spring.jpa:
  hibernate:
    ddl-auto: none # Hibernate ddl auto (none, validate, create, create-drop, update)
    naming.strategy: org.hibernate.cfg.ImprovedNamingStrategy # Naming strategy
  properties:
    hibernate.dialect: org.hibernate.dialect.MySQL5Dialect # The SQL dialect makes Hibernate generate better SQL for the chosen database

spring.jackson:
  serialization:
    WRITE_DATES_AS_TIMESTAMPS: false

spring.mail:
  protocol: smtp
  host: localhost
  port: 1234

flyway:
  enabled: true

rosette:
  baseUrl: http://localhost:9000
  apiVersion: v1
  jwtSecretToken: developmentSimpleJwtSecretToken
  defaultMailFrom: no-reply@localhost
  filesPath: ./rosetteFiles
  fileClientCacheMaxAge: 0
  cordateUrl: http://localhost:4200


---
spring:
  profiles: production

server:
  port: 9000 # Shall be set with environment variable PORT

logging.level:
  org.springframework.web.filter.CommonsRequestLoggingFilter: WARNING
#logging.level:
#  ROOT: ERROR
#  se.leafcoders.rosette: ERROR

spring.datasource:
  url: jdbc:mysql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?useSSL=false
  username: ${DATABASE_USERNAME}
  password: ${DATABASE_PASSWORD}

spring.mail:
# enable when real production!!!  testConnection: true
  host: ${MAIL_HOST}
  port: ${MAIL_PORT}
  username: ${MAIL_USERNAME}
  password: ${MAIL_PASSWORD}
  properties:
    mail.smtp.auth: ${MAIL_SMTP_AUTH}
    mail.smtp.starttls.enable: ${MAIL_SMTP_STARTTLS}
    # mail.smtp.socketFactory.port:

rosette:
  baseUrl: ${ROSETTE_URL}
  jwtSecretToken: ${ROSETTE_JWTSECRET}
  fileClientCacheMaxAge: 604800 # One week
  cordateUrl: ${CORDATE_URL}


---
spring:
  profiles: development, test

server:
  port: 9000

spring.datasource:
  url: jdbc:mysql://localhost/test
  username: root
  password: root

spring.mail:
  protocol: smtp
  host: localhost
  port: 1234
  properties:
    mail.smtp.auth: false
    mail.smtp.starttls.enable: false

rosette:
  baseUrl: http://localhost:9000
  cordateUrl: http://localhost:4200


---
spring:
  profiles: development

logging.level:
  org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG


---
spring:
  profiles: test

logging.level:
  org.springframework.web.filter.CommonsRequestLoggingFilter: WARNING

spring.jpa:
  show-sql: true # Show log for each sql query


# docker run -d  --name rosette-mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=test -e MYSQL_USER=root -e MYSQL_PASSWORD=root mysql:latest  


# docker run -d -p 2012:3306 --name mysql-docker-container -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=test -e MYSQL_USER=app_user -e MYSQL_PASSWORD=app_password mysql:latest

# docker run -d --name mysql-docker-container -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=test -e MYSQL_USER=app_user -e MYSQL_PASSWORD=app_password mysql:latest
