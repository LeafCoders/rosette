# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

info:
  app.version: "@project.version@"

spring.profiles:
  active: development # If spring.profile.active is not specified, profile will be "development"

spring.servlet.multipart:
  max-file-size: 200MB
  max-request-size: 200MB

spring.datasource:
  tomcat:
    testWhileIdle: true # Keep the connection alive if idle for a long time (needed in production)
    validationQuery: SELECT 1

spring.jpa:
  open-in-view: false
  hibernate:
    ddl-auto: none # Hibernate ddl auto (none, validate, create, create-drop, update)    
  properties:
    hibernate.dialect: org.hibernate.dialect.MySQL5Dialect # The SQL dialect makes Hibernate generate better SQL for the chosen database
    hibernate.jdbc.time_zone: UTC # Times in database are stored in UTC timezone

spring.jackson:
  serialization:
    WRITE_DATES_AS_TIMESTAMPS: false

spring.flyway:
  enabled: true

# Actuator configuration
management:
  endpoints:
    enabled-by-default: false
    web.exposure.include: "*" # Enable http enpoints for Actuator
    jmx.exposure.exclude: "*" # Disable JMX enpoints for Actuator
  endpoint:
    info.enabled: true
    flyway.enabled: true
    health.enabled: true
    logfile.enabled: true
    loggers.enabled: true
    metrics.enabled: true
    scheduledtasks.enabled: true


---
spring.config:
  activate.on-profile: production

server:
  port: 9000 # Shall be set with environment variable PORT

logging.level:
  org.springframework.web.filter.CommonsRequestLoggingFilter: WARN
#logging.level:
#  ROOT: ERROR
#  se.leafcoders.rosette: ERROR

spring.datasource:
  url: jdbc:mysql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}${DATABASE_CONNECT_PROPERTIES}
  username: ${DATABASE_USERNAME}
  password: ${DATABASE_PASSWORD}

spring.mail:
  host: ${MAIL_HOST}
  port: ${MAIL_PORT}
  username: ${MAIL_USERNAME}
  password: ${MAIL_PASSWORD}
  test-connection: ${MAIL_TEST_CONNECTION}
  properties:
    mail.smtp.auth: ${MAIL_SMTP_AUTH}
    mail.smtp.starttls.enable: ${MAIL_SMTP_STARTTLS}
    mail.smtp.ssl.trust: ${MAIL_SMTP_SSL_TRUST}
    mail.debug: ${MAIL_DEBUG}

rosette:
  baseUrl: ${ROSETTE_URL}
  jwtSecretToken: ${ROSETTE_JWTSECRET}
  defaultMailFrom: ${ROSETTE_DEFAULT_MAIL_FROM}
  adminMailTo: ${ROSETTE_ADMIN_MAIL_TO}
  filesPath: ${ROSETTE_FILES_FOLDER}
  fileClientCacheMaxAge: 604800 # One week
  cordateUrl: ${CORDATE_URL}



---
spring.config:
  activate.on-profile: development, test

server:
  port: 9000

spring.datasource:
  url: jdbc:mysql://localhost/test?autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
  username: root
  password: root

spring.mail:
  protocol: smtp
  host: localhost
  port: 1234
  test-connection: false # Enable to check connection to smtp server
  properties:
    mail.smtp.auth: false
    mail.smtp.starttls.enable: false

spring.devtools:
  add-properties: false

rosette:
  jwtSecretToken: developmentSimpleJwtSecretToken
  defaultMailFrom: no-reply@localhost
  adminMailTo: admin@localhost
  filesPath: ./rosetteFiles
  fileClientCacheMaxAge: 0
  baseUrl: http://localhost:9000/
  cordateUrl: http://localhost:4200/


---
spring.config:
  activate.on-profile: development

spring.output.ansi.enabled: ALWAYS # Enablecolor log output

logging:
  file:
    name: logfile_development.log
  level:
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
    web: DEBUG


---
spring.config:
  activate.on-profile: test

logging:
  file:
    name: logfile_test.log
  level:
    org.springframework.web.filter.CommonsRequestLoggingFilter: WARN

spring.jpa:
  show-sql: true # Show log for each sql query
